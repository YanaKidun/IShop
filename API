openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/STABROVSKAYAYA/Iba/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/STABROVSKAYAYA/IBA/1.0.0
info:
  version: "1.0.0"
  title: API for the E-Shop
  description: The API for the E-Shop
  contact:
    email: stabrovskayaya@gmail.com

tags:
  - name: user
    description: Пользователь (все категории пользователей)
  - name: economist
    description: Экономист
  - name: client
    description: Покупатель

paths:
  /login:
    post:
      tags:
        - user
      summary: Вход пользователя в систему
      description: Аутентификация пользователя с использованием логина и пароля.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Логин пользователя
                  example: "yana_k@example.ru"
                password:
                  type: string
                  format: password
                  description: Пароль пользователя
                  example: "password"
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Bearer Token для аутентификации
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjEyMzQiLCJ1c2VybmFtZSI6ImJpcnNjaG5lcnNvZXZfaGVsbG9fc2VjdXJpdHkiLCJyb2xlIjoidXNlciJ9.cZL6FJ2EKzK4gSKpPVo5v6poE1T9m3MxoA3on8RHkJ2I"
        '400':
          description: Некорректный запрос (например, отсутствуют обязательные параметры)
        '401':
          description: Неверные данные для входа (неправильный логин или пароль)
        '500':
          description: Внутренняя ошибка сервера

  /products:
    get:
      tags:
        - user
        - client
        - economist
      summary: Просмотр всех товаров
      description: Получение списка всех товаров в магазине.
      responses:
        '200':
          description: Список товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        '500':
          description: Внутренняя ошибка сервера

    post:
      tags:
        - economist
      summary: Создание нового товара
      description: Экономист может создать новый товар.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productNew'
      responses:
        '201':
          description: Товар успешно создан
        '400':
          description: Некорректные данные
        '500':
          description: Внутренняя ошибка сервера

  /products/{id}:
    get:
      tags:
        - user
        - client
        - economist
      summary: Просмотр товара
      description: Получение информации о конкретном товаре по его ID.
      parameters:
        - name: id
          in: path
          description: Идентификатор товара
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Товар найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '404':
          description: Товар не найден
        '500':
          description: Внутренняя ошибка сервера

    patch:
      tags:
        - economist
      summary: Обновление информации о товаре
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Идентификатор товара, который нужно обновить
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: Товар успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '400':
          description: Некорректные данные
        '404':
          description: Товар не найден
        '500':
          description: Внутренняя ошибка сервера

    delete:
      tags:
        - economist
      summary: Удаление товара
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Идентификатор товара, который нужно удалить
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Товар удален
        '400':
          description: Некорректные данные
        '404':
          description: Товар не найден
        '500':
          description: Внутренняя ошибка сервера

  
  /groups/{id}:
    get:
      tags:
        - user
        - client
        - economist
      summary: Просмотр группы товаров
      description: Получение информации о группе товаров по ее ID.
      parameters:
        - name: id
          in: path
          description: Идентификатор группы товаров
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Группа товаров найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
        '404':
          description: Группа товаров не найдена
        '500':
          description: Внутренняя ошибка сервера

  /groups/{id}/products:
    get:
      tags:
        - user
        - client
        - economist
      summary: Просмотр товаров в группе
      description: Получение списка товаров, относящихся к конкретной группе.
      parameters:
        - name: id
          in: path
          description: Идентификатор группы товаров
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Список товаров в группе
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        '404':
          description: Группа товаров не найдена
        '500':
          description: Внутренняя ошибка сервера

  /groups:
    post:
      tags:
        - economist
      summary: Создание новой группы товаров
      description: Экономист может создать новую группу товаров.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '201':
          description: Группа товаров успешно создана
        '400':
          description: Некорректные данные
        '500':
          description: Внутренняя ошибка сервера
          
          
    get:
      tags:
        - user
        - client
        - economist
      summary: Просмотр всех групп товаров
      description: Получение списка всех групп товаров.
      responses:
        '200':
          description: Список групп товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/group'
        '500':
          description: Внутренняя ошибка сервера

  /orders:
    get:
      tags:
        - client
      summary: Посмотреть товары в заказе
      operationId: viewItem
      security:
        - bearerAuth: []    
      description: Товары в заказе
      responses:
        '200':
          description: товары в заказе
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orderProduct'
        '500':
          description: внутренняя ошибка сервера 
          
    post:
      tags:
        - client
      summary: Создать новый заказ (положить первый товар в корзину)
      operationId: createOrder
      security:
        - bearerAuth: []    
      description: Добавить товар в корзину
      responses:
        '201':
          description: Заказ создан
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orderNew'
        '500':
          description: внутренняя ошибка сервера 

  /items:
    post:
      tags:
        - client
      summary: Добавить товар в заказ
      operationId: addItem
      security:
        - bearerAuth: [] 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderProduct'
      responses:
        '201':
          description: товар добавлен
        '400':
          description: некорректный ввод
 
  /items/{id}:
    patch:
      tags:
        - client
      summary: Изменить количество товара в заказе
      #operationId: updateItem
      security:
        - bearerAuth: []    
      description: Изменение количества товара по его идентификатору
      parameters:
        - name: id
          in: path
          description: ID товара, количество которого нужно изменить в заказе
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderProduct'
      responses:
        '200':
          description: 'Количество товара успешно изменено'
          content:
           application/json:
            schema:
             type: object
             properties:
               item:
                $ref: '#/components/schemas/order'
               quantity:
                type: integer
                description: Количество единиц товара в заказе
                example: 56

        '400':
          description: Некорректный ввод
        '404':
          description: Товар не найден в заказе

    delete:
      tags:
        - client
      summary: Удалить товар из заказа
      operationId: deleteItem
      security:
        - bearerAuth: []    
      description: Удаление товара из заказа по его идентификатору
      parameters:
        - name: id
          in: path
          description: Идентификатор товара для удаления
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Товар успешно удален из заказа
        '404':
          description: Товар не найден
        '500':
          description: Внутренняя ошибка сервера
          

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    product:
      type: object
      required:
        - id
        - name
        - price_with_discount
        - group
        - char_code
        - count_of_warehouse
      properties:
        id:
          type: integer
          description: Идентификатор товара
          example: 105
        name:
          type: string
          description: Название продукта
          example: "Молоко"
        price_with_discount:
          type: number
          format: decimal
          description: Цена товара после применения скидки
          example: 1.99
        group:
          type: string
          description: Группа товара
          example: "Молочные продукты"
        char_code:
          type: string
          description: Бар-код товара
          example: "SHP0001"
        count_of_warehouse:
          type: integer
          description: Количество товара на складе
          example: 1000

    productNew:
      type: object
      required:
        - name
        - price_with_discount
        - group
        - char_code
        - count_of_warehouse
      properties:
        name:
          type: string
          description: Название продукта
          example: "Молоко"
        price_with_discount:
          type: number
          format: decimal
          description: Цена товара после применения скидки
          example: 1.99
        group:
          type: string
          description: Группа товара
          example: "Молочные продукты"
        char_code:
          type: string
          description: Бар-код товара
          example: "SHP0001"
        count_of_warehouse:
          type: integer
          description: Количество товара на складе
          example: 1000

    group:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          description: Идентификатор группы
          example: 1
        name:
          type: string
          description: Название группы
          example: "Молочные продукты"

    orderNew:
      type: object
      required:
        - client_id
        - product_id
        - order_date
      properties:
        client_id:
          type: integer
          description: Идентификатор клиента
          example: 123
        product_id:
          type: integer
          description: Идентификатор продукта, добавляемого в заказ
          example: 456
        order_date:
          type: string
          format: date
          description: Дата создания заказа
          example: "2024-12-30"

    order:
      type: object
      required:
        - client_id
        - status
        - order_date
        - total_price
      properties:
        id:
          type: integer
          description: Идентификатор заказа
          example: 123
        client_id:
          type: integer
          description: Идентификатор клиента
          example: 456
        status:
          type: string
          description: Статус заказа
          example: "new"
        order_date:
          type: string
          format: date
          description: Дата создания заказа
          example: "2024-12-30"
        total_price:
          type: number
          format: decimal
          description: Общая стоимость заказа
          example: 100.5
        products:
          type: array
          description: Список товаров в заказе
          items:
            $ref: '#/components/schemas/product'
            
    orderProduct:
      type: object
      required:
        - order_id
        - product_id
        - quantity
      properties:
        order_id:
          type: integer
          description: Идентификатор заказа
          example: 10
        product_id:
          type: integer
          description: Идентификатор товара
          example: 10
        quantity:
          type: integer
          description: Количество товара
          example: 2
        price:
          type: number
          format: decimal
          description: Цена товара
          example: 50.25
